import re
from pathlib import Path

TELEGRAM_CHAT_ID_VAR = "TELEGRAM_ADMIN_ID"

def fix_send_admin_message_calls(content: str, filename: str) -> str:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –≤—ã–∑–æ–≤—ã send_admin_message(...) –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç TELEGRAM_ADMIN_ID –∫–∞–∫ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç,
    –µ—Å–ª–∏ –µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç.
    """
    pattern = r'await\s+send_admin_messageÓÄÅ\s*([^)]+?)\s*ÓÄÅ'
    matches = list(re.finditer(pattern, content))

    new_content = content
    offset = 0  # —Å–º–µ—â–µ–Ω–∏–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
    for match in matches:
        args = match.group(1)
        if ',' not in args:  # –∑–Ω–∞—á–∏—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å chat_id
            start, end = match.span(1)
            insert_pos = start + offset
            replacement = f"{TELEGRAM_CHAT_ID_VAR}, {args.strip()}"
            new_content = new_content[:insert_pos] + replacement + new_content[end+offset:]
            offset += len(replacement) - (end - start)

            print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ –Ω–∞ —Å—Ç—Ä–æ–∫–µ {new_content[:insert_pos].count(chr(10)) + 1} –≤ {filename}")
    return new_content

def fix_unmatched_brackets(content: str, filename: str) -> str:
    """
    –ü—Ä–æ–±—É–µ—Ç –ø–æ—á–∏–Ω–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É —Å–æ —Å–∫–æ–±–∫–∞–º–∏ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏).
    –¢–æ–ª—å–∫–æ –¥–ª—è rita_main.py.
    """
    lines = content.splitlines()
    for i, line in enumerate(lines):
        if i == 80 or i == 81:
            if line.count('[') > line.count(']') and line.count(')') >= line.count('('):
                lines[i] += "]"
                print(f"‚úÖ –ó–∞–∫—Ä—ã—Ç–∞ –ª–∏—à–Ω—è—è [ —Å–∫–æ–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i+1} –≤ {filename}")
            elif line.count(')') > line.count('(') and line.count('[') >= line.count(']'):
                lines[i] = line.replace(')', '', 1)  # —É–¥–∞–ª–∏–º –ª–∏—à–Ω—é—é –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ª–∏—à–Ω—è—è ) —Å–∫–æ–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ {i+1} –≤ {filename}")
    return "\n".join(lines)

def apply_patch(file_path: Path):
    content = file_path.read_text(encoding="utf-8")
    original = content

    content = fix_send_admin_message_calls(content, file_path.name)

    if file_path.name == "rita_main.py":
        content = fix_unmatched_brackets(content, file_path.name)

    if content != original:
        backup_path = file_path.with_suffix(file_path.suffix + ".bak")
        if not backup_path.exists():
            backup_path.write_text(original, encoding="utf-8")
            print(f"üì¶ –°–¥–µ–ª–∞–Ω –±—ç–∫–∞–ø: {backup_path.name}")
        file_path.write_text(content, encoding="utf-8")
        print(f"üíæ –û–±–Ω–æ–≤–ª—ë–Ω —Ñ–∞–π–ª: {file_path.name}")
    else:
        print(f"‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è: {file_path.name}")

if __name__ == "__main__":
    apply_patch(Path("check_bot_diagnostics.py"))
    apply_patch(Path("rita_main.py"))
