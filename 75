import os
import re

FILE = "check_bot_diagnostics.py"
BACKUP = FILE + ".bak"

def backup():
    if not os.path.exists(BACKUP):
        with open(FILE, "r", encoding="utf-8") as f:
            content = f.read()
        with open(BACKUP, "w", encoding="utf-8") as f:
            f.write(content)
        print(f"✅ Бэкап создан: {BACKUP}")
    else:
        print(f"⚠️ Бэкап уже существует: {BACKUP}")

def fix_send_admin_message():
    with open(FILE, "r", encoding="utf-8") as f:
        lines = f.readlines()

    new_lines = []
    skip = False
    for line in lines:
        if re.match(r"\s*async def send_admin_message", line):
            skip = True
            continue
        if skip:
            if line.strip() == "" or line.startswith(" " * 4) or line.startswith("\t"):
                continue
            else:
                skip = False
        new_lines.append(line)

    new_func = '''
import aiohttp
import logging

TELEGRAM_ADMIN_ID = 558079551
TELEGRAM_BOT_TOKEN = "7609027838:AAFk2XZRtcvTzbgcrj6QEFWyijon4WsVKj4"

async def send_admin_message(chat_id: int, text: str):
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            "chat_id": chat_id,
            "text": text,
            "parse_mode": "HTML"
        }
        async with aiohttp.ClientSession() as session:
            async with session.post(url, json=payload) as resp:
                if resp.status != 200:
                    logging.error(f"❌ Не удалось отправить сообщение админу: {await resp.text()}")
    except Exception as e:
        logging.error(f"❌ Ошибка при отправке сообщения админу: {e}")
'''.strip() + "\n\n"

    # Объединяем новую функцию и остальной код
    new_content = new_func + "".join(new_lines)

    with open(FILE, "w", encoding="utf-8") as f:
        f.write(new_content)

    print("✅ Все вызовы send_admin_message() успешно исправлены.")

# Запуск
backup()
fix_send_admin_message()
