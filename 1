import os
import time
import re
import json
import psutil
import shutil
import inspect
import traceback
import difflib
from datetime import datetime
from telegram import Bot

# üîê –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ç–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID)
TELEGRAM_BOT_TOKEN = "REMOVED_TELEGRAM_TOKEN_PART:REMOVED_TELEGRAM_TOKEN_PART"
TELEGRAM_ADMIN_ID = REMOVED_OWNER_ID  # —Ç–≤–æ–π Telegram ID (int)

bot = Bot(token=TELEGRAM_BOT_TOKEN)

def send_telegram_report(message: str):
    try:
        bot.send_message(chat_id=TELEGRAM_ADMIN_ID, text=message)
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ Telegram] {e}")

def analyze_script_code(filepath):
    try:
        with open(filepath, "r", encoding="utf-8") as f:
            code = f.read()

        report = "[ü§ñ –ê–Ω–∞–ª–∏–∑ —É–ª—É—á—à–µ–Ω–∏–π]\n"
        required_functions = [
            "auto_fix_loop", "auto_fix_from_logs", "run_bot", "run_intelligent_auto_improve"
        ]
        for func in required_functions:
            if func in code:
                report += f"‚úÖ `{func}` –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n"
            else:
                report += f"‚ùå `{func}` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n"

        # –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        cpu = psutil.cpu_percent(interval=1)
        ram = psutil.virtual_memory().percent
        report += f"\nüìä CPU: {cpu}%\nüß† RAM: {ram}%"

        # –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
        missing = [f for f in required_functions if f not in code]
        if missing:
            report += "\n\nüì¶ –ó–∞–≥–æ—Ç–æ–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:\n"
            for func in missing:
                report += f"\n```python\ndef {func}():\n    pass  # TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å {func}\n```\n"

        send_telegram_report(report)

    except Exception as e:
        traceback.print_exc()
        send_telegram_report(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∫—Ä–∏–ø—Ç–∞: {e}")

async def run_intelligent_auto_improve():
    script_path = os.path.abspath(__file__)
    analyze_script_code(script_path)
