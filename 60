import re

FILE = "check_bot_diagnostics.py"

NEW_SEND_ADMIN_MESSAGE = """
import aiohttp
import logging

async def send_admin_message(chat_id: int, text: str):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text
    }
    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(url, json=payload) as resp:
                if resp.status != 200:
                    logging.error(f"❌ Не удалось отправить сообщение админу: {await resp.text()}")
    except Exception as e:
        logging.error(f"❌ Ошибка при отправке сообщения админу: {e}")
"""

def main():
    with open(FILE, "r", encoding="utf-8") as f:
        code = f.read()

    # 1. Удаляем все старые определения send_admin_message (простая попытка - от функции до конца)
    code = re.sub(r'async def send_admin_message.*?^\n', '', code, flags=re.DOTALL | re.MULTILINE)
    code = re.sub(r'def send_admin_message.*?^\n', '', code, flags=re.DOTALL | re.MULTILINE)

    # 2. Добавляем новую функцию send_admin_message в начало (после импортов)
    # Найдем конец блока импортов — предположим, импортов немного и они в начале
    imports_match = re.search(r'(^(import .+|from .+ import .+)$\n?)+', code, flags=re.MULTILINE)
    if imports_match:
        end_import_pos = imports_match.end()
        code = code[:end_import_pos] + "\n" + NEW_SEND_ADMIN_MESSAGE + "\n" + code[end_import_pos:]
    else:
        # Если не нашли импортов — просто в начало
        code = NEW_SEND_ADMIN_MESSAGE + "\n" + code

    # 3. Заменяем вызовы send_admin_message на корректные с двумя аргументами и await

    # Пример: все вызовы вида send_admin_message(...) заменим на await send_admin_message(TELEGRAM_ADMIN_ID, <текст>)

    # Нам нужно найти вызовы send_admin_message и заменить их, например:
    # send_admin_message(something) -> await send_admin_message(TELEGRAM_ADMIN_ID, something)
    # send_admin_message() -> await send_admin_message(TELEGRAM_ADMIN_ID, "some default message")

    def replace_call(match):
        inside = match.group(1).strip()
        if inside == "":
            text = '"Автоматическое сообщение от бота."'
        else:
            text = inside
        return f"await send_admin_message(TELEGRAM_ADMIN_ID, {text})"

    code = re.sub(r'send_admin_message(.*?)', replace_call, code)

    # 4. Сохраняем обратно
    with open(FILE, "w", encoding="utf-8") as f:
        f.write(code)

    print(f"✅ Патч успешно применён к {FILE}!")

if __name__ == "__main__":
    main()
