from pathlib import Path

target_file = Path("check_bot_diagnostics.py")

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
backup = target_file.with_suffix(".py.bak_pathfix")
if not backup.exists():
    target_file.replace(backup)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup.name}")
else:
    print(f"‚ÑπÔ∏è –ë—ç–∫–∞–ø —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {backup.name}")

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å
safe_code_block = '''
from pathlib import Path

def safe_get_current_file():
    try:
        return Path(__file__).resolve()
    except Exception:
        return Path.cwd() / "check_bot_diagnostics.py"

def safe_get_parent(path_obj):
    try:
        return path_obj.parent
    except Exception:
        return Path.cwd()

CURRENT_PATH = safe_get_current_file()
MAIN_SCRIPT_PATH = safe_get_parent(CURRENT_PATH) / "rita_main.py"
DIAGNOSTICS_SCRIPT_PATH = CURRENT_PATH

print("[DEBUG] CURRENT_PATH =", CURRENT_PATH)
print("[DEBUG] MAIN_SCRIPT_PATH =", MAIN_SCRIPT_PATH)
print("[DEBUG] DIAGNOSTICS_SCRIPT_PATH =", DIAGNOSTICS_SCRIPT_PATH)
'''.strip() + '\n\n'

# –ß—Ç–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
with backup.open("r", encoding="utf-8") as f:
    lines = f.readlines()

new_lines = []
removed = False

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å MAIN_SCRIPT_PATH –∏ DIAGNOSTICS_SCRIPT_PATH
for line in lines:
    if "MAIN_SCRIPT_PATH" in line or "DIAGNOSTICS_SCRIPT_PATH" in line:
        removed = True
        continue
    new_lines.append(line)

# –í—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–¥ –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤
insert_index = 0
for i, line in enumerate(new_lines):
    if line.strip().startswith("import ") or line.strip().startswith("from "):
        insert_index = i + 1

new_lines.insert(insert_index, safe_code_block)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª
with target_file.open("w", encoding="utf-8") as f:
    f.writelines(new_lines)

print("‚úÖ –ü—É—Ç—å MAIN_SCRIPT_PATH –∏ DIAGNOSTICS_SCRIPT_PATH –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω.")
if removed:
    print("üßπ –°—Ç–∞—Ä—ã–µ —Å—Ç—Ä–æ–∫–∏ —É–¥–∞–ª–µ–Ω—ã.")
else:
    print("‚ö†Ô∏è –°—Ç–∞—Ä—ã–µ —Å—Ç—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã —Ä–∞–Ω–µ–µ.")
