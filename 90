import os
import re

FILES = ["check_bot_diagnostics.py", "rita_main.py"]
BACKUP_SUFFIX = ".bak"

WRAPPER_CODE = '''
# ‚úÖ –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã send_admin_message –æ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
def debug_send_admin_message_wrapper(func):
    import functools
    import logging

    @functools.wraps(func)
    async def wrapper(*args, **kwargs):
        try:
            if len(args) < 2 and 'text' not in kwargs:
                logging.warning("‚ö†Ô∏è [DEBUG] send_admin_message –≤—ã–∑–≤–∞–Ω –±–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞! args=%s, kwargs=%s", args, kwargs)
                return
            return await func(*args, **kwargs)
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ debug_send_admin_message_wrapper: {e}")
    return wrapper

# üõ°Ô∏è –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º send_admin_message (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ)
send_admin_message = debug_send_admin_message_wrapper(send_admin_message)
'''

def patch_file(filename):
    print(f"\nüìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª: {filename}")

    if not os.path.exists(filename):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filename}")
        return

    # –ë—ç–∫–∞–ø
    backup_file = filename + BACKUP_SUFFIX
    if not os.path.exists(backup_file):
        with open(filename, "r", encoding="utf-8") as f:
            original = f.read()
        with open(backup_file, "w", encoding="utf-8") as f:
            f.write(original)
        print(f"‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: {backup_file}")
    else:
        print(f"‚ö†Ô∏è –ë—ç–∫–∞–ø —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {backup_file}")

    with open(filename, "r", encoding="utf-8") as f:
        lines = f.readlines()

    if any("debug_send_admin_message_wrapper" in line for line in lines):
        print("‚ÑπÔ∏è –û–±—ë—Ä—Ç–∫–∞ —É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞.")
        return

    new_lines = []
    inserted = False
    for i, line in enumerate(lines):
        new_lines.append(line)
        if not inserted and "async def send_admin_message" in line:
            new_lines.append(WRAPPER_CODE + "\n")
            inserted = True

    if inserted:
        with open(filename, "w", encoding="utf-8") as f:
            f.writelines(new_lines)
        print("‚úÖ –û–±—ë—Ä—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞.")
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ async def send_admin_message ‚Äî –ø—Ä–æ–ø—É—Å–∫.")

if __name__ == "__main__":
    for file in FILES:
        patch_file(file)
