import re
from pathlib import Path

FILE = Path("check_bot_diagnostics.py")
BACKUP = FILE.with_suffix(".bak")

def patch_encoding_in_file(file_path: Path):
    text = file_path.read_text(encoding="utf-8", errors="replace")
    original_text = text

    # Резервное копирование
    BACKUP.write_text(text, encoding="utf-8")
    print(f"Бэкап создан: {BACKUP}")

    # Шаблоны для замены:
    # 1) open(...) без encoding
    # 2) .read_text() без encoding
    # 3) .write_text(...)

    # --- open(...) без encoding добавляем encoding="utf-8"
    def repl_open(match):
        inside = match.group(1)
        # Проверим, есть ли уже encoding
        if "encoding" in inside:
            return match.group(0)  # ничего не меняем
        # Вставляем encoding="utf-8" после имени файла, но до режима и т.д.
        parts = inside.split(",")
        parts = [p.strip() for p in parts]
        # Вставляем encoding="utf-8" после первого аргумента
        if len(parts) == 1:
            new_inside = parts[0] + ', encoding="utf-8"'
        else:
            new_inside = parts[0] + ', encoding="utf-8", ' + ", ".join(parts[1:])
        return f"open({new_inside})"

    text = re.sub(r"open\s*([^]+)\s*", repl_open, text)

    # --- .read_text() без encoding
    text = re.sub(
        r"(\.read_text\s*)",
        r'.read_text(encoding="utf-8")',
        text
    )

    # --- .write_text(...) без encoding добавляем encoding="utf-8"
    text = re.sub(
        r"(\.write_text)([^]*?)()",
        lambda m: (
            m.group(0) if "encoding" in m.group(2) else
            f"{m.group(1)}{m.group(2)}, encoding='utf-8'{m.group(3)}"
        ),
        text
    )

    # Записать исправленный файл
    file_path.write_text(text, encoding="utf-8")
    print(f"Файл {file_path} обновлён с добавлением encoding='utf-8'")

if __name__ == "__main__":
    patch_encoding_in_file(FILE)
