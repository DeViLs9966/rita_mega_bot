import re
from pathlib import Path

def fix_exists_calls(file_path):
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()

    # Регулярка для поиска вызова exists() без Path(...) перед ним
    # Будем искать pattern вида: <var>.exists()
    # и заменять на Path(<var>).exists() если <var> не Path(...)
    pattern = re.compile(r'(?<!Path)(\b[\w\.]+\b)\.exists')

    def replacer(match):
        var = match.group(1)
        # Если уже Path(var) — не трогаем (регэксп это исключает)
        # Заменяем на Path(var).exists()
        return f'Path({var}).exists()'

    new_content = pattern.sub(replacer, content)

    # Добавляем импорт Path, если его нет
    if 'from pathlib import Path' not in new_content:
        new_content = 'from pathlib import Path\n' + new_content

    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(new_content)
    print(f'[INFO] Исправлен вызов .exists() в {file_path}')

# Путь к скриптам
rita_main_path = 'rita_main.py'
check_diag_path = 'check_bot_diagnostics.py'

fix_exists_calls(rita_main_path)
fix_exists_calls(check_diag_path)
